<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.mht.system.dao.AdminPermissionDao">
    <resultMap id="baseResultMap" type="AdminPermission">
        <id column="id" property="id"/>
        <result column="pid" property="pid" javaType="integer"/>
        <result column="title" property="title" javaType="string"/>
        <result column="req_url" property="reqUrl" javaType="string"/>
        <result column="password" property="password" javaType="string"/>
        <result column="percode" property="percode" javaType="string"/>
        <result column="available" property="available" javaType="Boolean"/>
        <result column="type" property="type" javaType="string"/>
    </resultMap>

    <resultMap id="treeResultMap" type="com.lee.mht.system.utils.TreeNode">
        <id column="id" property="id"/>
        <result column="title" property="label" javaType="string"/>
    </resultMap>

    <select id="getAllPermissionsByRoleId" resultMap = "baseResultMap">
        SELECT p.id as id,p.title as title ,p.req_url as req_url,p.percode as percode,
               p.available as available
        FROM admin_role_permission as rp
        LEFT JOIN admin_permission as p
        on p.id = rp.p_id
        where rp.r_id = #{id}
    </select>

    <select id="getAllAdminPermission" resultMap = "baseResultMap">
        SELECT id,title,pid,req_url,percode,available,type
        FROM admin_permission
        <where>
            <if test="title != null and ! &quot;&quot;.equals(title)">
                <bind name="myTitle" value="'%' + title + '%'"/>
                and title like #{myTitle}
            </if>
            <if test="percode != null and ! &quot;&quot;.equals(percode)">
                <bind name="myPercode" value="'%' + percode + '%'"/>
                and percode like #{myPercode}
            </if>
            <if test="pid != null">
                and pid = #{pid}
            </if>
            and type = 'permission'
        </where>
    </select>
    <select id="getAllMenu" resultMap="baseResultMap">
        SELECT id,title,req_url,percode,available,type
        FROM admin_permission
        WHERE type = 'menu'
    </select>

    <update id="updateAdminPermission" >
        UPDATE admin_permission
        <set>
            <if test="permission.title != null and ! &quot;&quot;.equals(permission.title)">
                title = #{permission.title},
            </if>
            <if test="permission.reqUrl != null and ! &quot;&quot;.equals(permission.reqUrl)">
                req_url = #{permission.reqUrl},
            </if>
            <if test="permission.percode != null and ! &quot;&quot;.equals(permission.percode)">
                percode = #{permission.percode},
            </if>
            <if test="permission.available != null">
                available = #{permission.available}
            </if>
        </set>
        WHERE
        id = #{permission.id};
    </update>

    <insert id="addAdminPermission">
        INSERT INTO admin_permission (title,pid,req_url,percode,available,type)
        VALUES (#{permission.title},#{permission.pid},#{permission.reqUrl},#{permission.percode},#{permission.available},'permission')
    </insert>

    <select id="checkPermissionnameUnique" resultType="Integer">
        SELECT COUNT(*) FROM admin_permission
        WHERE title = #{title}
    </select>

    <!--åˆ -->
    <delete id="deleteAdminPermissionByIds">
        DELETE FROM admin_permission
        WHERE id in
        <foreach collection="ids" item = "id" index = "no" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getPids" resultMap="treeResultMap">
        SELECT id,title FROM admin_permission
        WHERE type = 'menu'
    </select>

    <delete id="deleteAllPermissionByRoleId" >
        DELETE FROM admin_role_permission
        WHERE r_id = #{roleId}
    </delete>

    <insert id="addPermissionByRoleId">
        INSERT INTO admin_role_permission(r_id,p_id)
        VALUES
        <foreach collection="pIds"  item="p_id" index="index" separator=",">
            (#{roleId},#{p_id})
        </foreach>
    </insert>
</mapper>