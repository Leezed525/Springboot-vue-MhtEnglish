<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.mht.system.dao.AdminRoleDao">
    <resultMap id="baseResultMap" type="AdminRole">
        <id column="id" property="id"/>
        <result column="rolename" property="roleName"/>
        <result column="comment" property="comment"/>
        <result column="available" property="available" javaType="Boolean"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getAllRoles" resultMap="baseResultMap">
        SELECT id,rolename,comment,available,createtime
        FROM admin_role
        where available = 1 and visible = 1
    </select>

    <select id="getAllRolesByUserId" resultMap="baseResultMap">
        SELECT r.id as id,r.rolename as rolename,r.comment as comment,
               r.available as available ,r.createtime as createtime
        FROM admin_user_role	as ur
        LEFT JOIN `admin_role` as r
        on r.id = ur.r_id
        where ur.u_id = #{id}
    </select>

    <delete id="deleteAllRolesByUserId">
        DELETE FROM admin_user_role
        where u_id = #{userId}
    </delete>

    <insert id="addRolesByUserId" >
        INSERT INTO admin_user_role(u_id,r_id)
        VALUES
        <foreach collection="rIds"  item="r_id" index="index" separator=",">
            (#{u_id},#{r_id})
        </foreach>
    </insert>

    <select id="getAllAdminRole" resultMap="baseResultMap">
        SELECT id,rolename,comment,available,createtime from admin_role
        <where>
            <if test="rolename != null and !&quot;&quot;.equals(rolename)">
                <bind name="myRolename" value="'%' + rolename + '%'"/>
                rolename LIKE #{myRolename}
            </if>
            <if test="comment != null and !&quot;&quot;.equals(comment)">
                <bind name="myComment" value="'%' + comment + '%'"/>
                AND comment LIKE #{myComment}
            </if>
            AND available = 1 AND visible = 1
        </where>
    </select>

    <update id="updateAdminRole" >
        UPDATE admin_role
        <set>
            <if test="adminRole.roleName != null and ! &quot;&quot;.equals(adminRole.roleName)">
                rolename = #{adminRole.roleName},
            </if>
            <if test="adminRole.comment != null and ! &quot;&quot;.equals(adminRole.comment)">
                comment = #{adminRole.comment},
            </if>
            <if test="adminRole.available != null">
                available = #{adminRole.available}
            </if>
        </set>
        WHERE
        id = #{adminRole.id};
    </update>

    <!--检查角色名是否唯一-->
    <select id="checkRolenameUnique" resultType="Integer">
        SELECT COUNT(0) FROM admin_role
        WHERE rolename = #{rolename}
    </select>

    <!--增-->
    <insert id="addAdminRole" parameterType="AdminRole">
        INSERT INTO admin_role (rolename,comment,createtime,available)
        VALUES (#{adminRole.roleName},#{adminRole.comment},NOW(),#{adminRole.available})
    </insert>

    <!--删-->
    <delete id="deleteAdminRoleByIds">
        DELETE FROM admin_role
        WHERE id in
        <foreach collection="ids" item = "id" index = "no" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>