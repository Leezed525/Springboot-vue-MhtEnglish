<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.mht.system.dao.AdminUserDao">
    <resultMap id="baseResultMap" type="AdminUser">
        <id column="id" property="id"/>
        <result column="username" property="username" javaType="string"/>
        <result column="nickname" property="nickname" javaType="string"/>
        <result column="remark" property="remark"  javaType="string"/>
        <result column="password" property="password" javaType="string"/>
        <result column="available" property="available" javaType="Boolean"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="salt" property="salt" javaType="string"/>
    </resultMap>

    <select id="getAdminUserByUsername" parameterType="String" resultMap="baseResultMap">
        SELECT id,username,nickname,available FROM admin_user WHERE username = #{username}
    </select>

    <select id="login" parameterType="String" resultMap="baseResultMap">
        <!-- IFNULL(MAX( id ),0) 用来防止mybatis查询查不到结果时报错的问题 -->
        SELECT IFNULL(MAX( id ),0) AS id,username,password,nickname,available ,salt FROM admin_user
        WHERE username = #{username}
    </select>

    <select id="getpasswordByUsername" parameterType="String"   resultType="String">
        SELECT password FROM admin_user
        WHERE username = #{username}
    </select>

    <!--查-->
    <select id="getAllAdminUser"  resultMap="baseResultMap">
        SELECT  DISTINCT u.id as id,u.username as username,u.nickname as nickname,
                u.available as available,u.remark as remark
        FROM  `admin_user` as u
        left join  admin_user_role as ur
        on u.id = ur.u_id
        <where>
            <if test="username != null and ! &quot;&quot;.equals(username)">
                <bind name="myUsername" value="'%' + username + '%'"/>
                and u.username like #{myUsername}
            </if>
            <if test="nickname != null and ! &quot;&quot;.equals(nickname)">
                <bind name="myNickname" value="'%' + nickname + '%'"/>
                and u.nickname like #{myNickname}
            </if>
            <if test="role_id != null">
                and ur.r_id = #{role_id}
            </if>
            and u.visible = 1
        </where>

    </select>
    <!--改-->
    <update id="updateAdminUser" parameterType="AdminUser">
        UPDATE admin_user
        <set>
            <if test="adminUser.nickname != null and ! &quot;&quot;.equals(adminUser.nickname)">
                nickname = #{adminUser.nickname},
            </if>
            <if test="adminUser.remark != null and ! &quot;&quot;.equals(adminUser.remark)">
                remark = #{adminUser.remark},
            </if>
            <if test="adminUser.available != null">
                available = #{adminUser.available}
            </if>
        </set>
        WHERE
        id = #{adminUser.id};
    </update>

    <!--删-->
    <delete id="deleteAdminUserByIds">
        DELETE FROM admin_user
        WHERE id in
        <foreach collection="ids" item = "id" index = "no" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--增-->
    <insert id="addAdminUser" parameterType="AdminUser">
        INSERT INTO admin_user (username,nickname,password,createtime,salt)
        VALUES (#{user.username},#{user.nickname},#{user.password},NOW(),#{user.salt})
    </insert>

    <!--重置密码-->
    <update id="restPassword" >
        update admin_user
        <set>
            password = #{password},
            salt = #{salt}
        </set>
        <where>
            id = #{id}
        </where>
    </update>
</mapper>