<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.mht.business.dao.UserDao">
    <resultMap id="baseResultMap" type="com.lee.mht.business.entity.User">
        <id column="id" property="id"/>
        <result column="open_id" property="openId" javaType="string"/>
        <result column="nickname" property="nickname" javaType="string"/>
        <result column="avatar_url" property="avatarUrl" javaType="string"/>
        <result column="gender" property="gender" javaType="integer"/>
        <result column="country" property="country" javaType="string"/>
        <result column="province" property="province" javaType="string"/>
        <result column="city" property="city" javaType="string"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <select id="isNewUser" resultType="Integer">
        SELECT COUNT(*)
        FROM user
        WHERE open_id = #{openId}
    </select>


    <insert id="registerUser" useGeneratedKeys="true" keyProperty="user.id">
        INSERT INTO user
        (open_id, nickname, avatar_url, gender, country, province, city, createtime)
        VALUES (#{user.openId}, #{user.nickname}, #{user.avatarUrl}, #{user.gender}, #{user.country}, #{user.province},
                #{user.city}, NOW())
    </insert>

    <select id="getUserByOpenId" resultMap="baseResultMap">
        SELECT id,
               open_id,
               nickname,
               avatar_url,
               gender,
               country,
               province,
               city,
               createtime
        FROM user
        WHERE open_id = #{openId}
    </select>
    <select id="getUserById" resultType="com.lee.mht.business.entity.User">
        SELECT id,
               nickname,
               avatar_url,
               gender,
               country,
               province,
               city
        FROM user
        WHERE id = #{id}
    </select>

    <update id="updateUserInfo">
        UPDATE user
        <set>
            <if test="user.nickname != null and ! &quot;&quot;.equals(user.nickname)">
                nickname = #{user.nickname},
            </if>
            <if test="user.avatarUrl != null and ! &quot;&quot;.equals(user.avatarUrl)">
                avatar_url = #{user.avatarUrl},
            </if>
            <if test="user.gender != null">
                gender = #{user.gender},
            </if>
            <if test="user.country != null and ! &quot;&quot;.equals(user.country)">
                country = #{user.country}
            </if>
            <if test="user.province != null and ! &quot;&quot;.equals(user.province)">
                province = #{user.province}
            </if>
            <if test="user.city != null and ! &quot;&quot;.equals(user.city)">
                city = #{user.city}
            </if>
        </set>
        WHERE
        id = #{user.id};
    </update>

    <select id="getRecentWeekNewUserCount" resultType="com.lee.mht.system.vo.UserCountVo">
        SELECT a.click_date       AS date,
               ifnull(b.count, 0) AS count
        FROM view_last_seven_day a
                 LEFT JOIN (
            SELECT DATE(createtime) date,
                   count(id) AS     count
            FROM user
            WHERE DATEDIFF(now(), createtime) &lt;= 7
            GROUP BY date
        ) AS b ON a.click_date = b.date
    </select>
    <select id="getRecentWeekActiveUserCount" resultType="com.lee.mht.system.vo.UserCountVo">
        SELECT a.click_date       AS date,
               ifnull(b.count, 0) AS count
        FROM view_last_seven_day a
                 LEFT JOIN (
            SELECT DATE(w.createtime)      date,
                   count(DISTINCT u.id) as count
            FROM `user` AS u
                     LEFT JOIN complete_word AS w ON u.id = w.u_id
            WHERE DATEDIFF(NOW(), w.createtime) &lt;= 7
            GROUP BY date
        ) AS b ON a.click_date = b.date;
    </select>
    <select id="getRecentWeekAllUserCount" resultType="com.lee.mht.system.vo.UserCountVo">
        SELECT a.click_date AS date,
               count(b.id) As count
        FROM view_last_seven_day AS a
                 LEFT JOIN `user` AS b ON a.click_date &gt;= DATE(b.createtime)
        GROUP BY a.click_date
    </select>

</mapper>