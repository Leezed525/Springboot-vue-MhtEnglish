<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.mht.business.dao.WordDao">
    <cache type="com.lee.mht.system.config.MybatisRedisCache"/>
    <resultMap id="baseResultMap" type="com.lee.mht.business.entity.Word">
        <id column="id" property="id"/>
        <result column="word" property="word" javaType="string"/>
        <result column="symbols" property="symbols" javaType="string"/>
        <result column="part" property="part" javaType="string"/>
        <result column="mean" property="mean" javaType="integer"/>
        <result column="ex" property="ex" javaType="string"/>
        <result column="tran" property="tran" javaType="string"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <select id="RandomSelectWordByNumber" resultType="com.lee.mht.business.entity.Word" useCache="false">
        SELECT id, word, symbols, part, mean, ex, tran
        FROM `words`
        WHERE id not in
              (SELECT w_id FROM `complete_word` where u_id = #{uId})
        ORDER BY RAND()
        LIMIT #{number}
    </select>

    <select id="RandomSelectReviewWordByNumber" resultType="com.lee.mht.business.entity.Word" useCache="false">
        SELECT id, word, symbols, part, mean, ex, tran
        FROM `words`
        WHERE id in
              (SELECT w_id FROM `complete_word` where u_id = #{uId})
        ORDER BY RAND()
        LIMIT #{number}
    </select>

    <select id="getRightOption" resultType="com.lee.mht.business.vo.WordOptionsVo">
        SELECT CONCAT(part, mean) AS mean, 1 AS 'right'
        FROM words
        WHERE id = #{id}
    </select>

    <select id="getErrorOption" resultType="com.lee.mht.business.vo.WordOptionsVo">
        SELECT CONCAT(part, mean) AS mean, 0 AS 'right'
        FROM words
        WHERE id != #{id}
        ORDER BY RAND()
        LIMIT 3;
    </select>

    <insert id="learnComplete">
        INSERT INTO complete_word(u_id, w_id, createtime)
        VALUES
        <foreach collection="words" item="word" separator=",">
            (#{uId},#{word.id},NOW())
        </foreach>
    </insert>


    <select id="getCompleteWordCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM complete_word
        WHERE u_id = #{uId}
    </select>
    <select id="getAllCompleteWord" resultType="com.lee.mht.business.entity.Word">
        SELECT w.id,
        w.word,
        w.symbols,
        w.part,
        w.mean,
        w.ex,
        w.tran
        from complete_word as c
        LEFT JOIN words as w ON c.w_id = w.id
        <where>
            <if test="word != null and ! &quot;&quot;.equals(word)">
                <bind name="myWord" value="'%' + word  + '%'"/>
                word like #{myWord}
            </if>
            AND c.u_id = #{uId}
        </where>
    </select>

    <delete id="deleteCompleteWordByUserIdAndWordId">
        DELETE
        FROM complete_word
        WHERE u_id = #{uId}
          AND W_id = #{wId}
    </delete>

    <select id="getTodayReviewCount" resultType="java.lang.Integer">
        SELECT IFNULL(max(review_count), 0)
        FROM review_word
        WHERE u_id = #{uId}
          AND TO_DAYS(create_date) = TO_DAYS(NOW())
    </select>

    <insert id="createTodayReviewWord">
        INSERT INTO review_word(u_id, review_count, create_date)
        VALUES (#{uId}, #{count}, NOW())
    </insert>

    <update id="updateTodayReviewWord">
        UPDATE review_word
        SET review_count = #{count}
        WHERE u_id = #{uId}
          AND TO_DAYS(create_date) = TO_DAYS(NOW())
    </update>

    <select id="getRecentWeekCompleteWordCount" resultType="com.lee.mht.business.vo.WordCountVo">
        SELECT a.click_date as date, ifnull(b.count, 0) AS count
        FROM view_last_seven_day a
                 LEFT JOIN
             (SELECT DATE(createtime) date, count(1) AS count
              FROM complete_word
              WHERE DATEDIFF(now(), createtime) &lt;= 7
                and u_id = #{uId}
              GROUP BY date) as b
             ON a.click_date = b.date;
    </select>
    <select id="getSumWeekCompleteWordCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM complete_word
        WHERE DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(createtime)
          AND u_id = 30;
    </select>
    <select id="getRecentWeekReviewWordCount" resultType="com.lee.mht.business.vo.WordCountVo">
        SELECT a.click_date as date, ifnull(b.count, 0) AS count
        FROM view_last_seven_day a
                 LEFT JOIN
             (SELECT create_date as date, review_count as count
              FROM review_word
              WHERE DATEDIFF(now(), create_date) &lt;= 7
                and u_id = #{uId}
             ) as b
             ON a.click_date = b.date;
    </select>
    <select id="getSumWeekReviewCount" resultType="java.lang.Integer">
        SELECT sum(review_count)
        FROM review_word
        WHERE DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(create_date)
          AND u_id = #{uId};
    </select>
    <select id="getTodayCompleteWordCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM complete_word
        WHERE u_id = #{uId}
          AND to_days(createtime) = to_days(now());
    </select>
    <select id="getAllLearnTime" resultType="java.lang.Integer">
        SELECT SUM(time)
        FROM learn_time
        WHERE u_id = #{uId}
    </select>

    <insert id="saveLearnTime">
        INSERT INTO learn_time(u_id, date, time) VALUES
        <foreach collection="learnTimes" item="learnTime" separator=",">
            (#{learnTime.uId},#{learnTime.date},#{learnTime.time})
        </foreach>
    </insert>



</mapper>